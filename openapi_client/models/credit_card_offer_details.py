# coding: utf-8

"""
    Engine by MoneyLion API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.58.0
    Contact: help@engine.tech
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictFloat, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional, Union
from openapi_client.models.card_benefit import CardBenefit
from openapi_client.models.card_purpose import CardPurpose
from openapi_client.models.card_type import CardType
from openapi_client.models.intro_offer_type import IntroOfferType
from openapi_client.models.provided_credit_rating import ProvidedCreditRating
from openapi_client.models.term_unit import TermUnit
from typing import Optional, Set
from typing_extensions import Self

class CreditCardOfferDetails(BaseModel):
    """
    CreditCardOfferDetails
    """ # noqa: E501
    card_name: Optional[StrictStr] = Field(default=None, description="Display name of the card", alias="cardName")
    card_image_url: StrictStr = Field(alias="cardImageUrl")
    card_purposes: Optional[List[CardPurpose]] = Field(default=None, alias="cardPurposes")
    rates_url: Optional[StrictStr] = Field(default=None, description="External link to card rates, terms and conditions", alias="ratesUrl")
    max_purchase_apr: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="maxPurchaseApr")
    min_purchase_apr: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="minPurchaseApr")
    purchase_apr_text: Optional[StrictStr] = Field(default=None, alias="purchaseAprText")
    max_purchase_intro_apr: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="maxPurchaseIntroApr")
    min_purchase_intro_apr: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="minPurchaseIntroApr")
    purchase_intro_apr_term: Optional[StrictInt] = Field(default=None, alias="purchaseIntroAprTerm")
    purchase_intro_apr_term_unit: Optional[TermUnit] = Field(default=None, alias="purchaseIntroAprTermUnit")
    purchase_intro_apr_text: Optional[StrictStr] = Field(default=None, alias="purchaseIntroAprText")
    max_cash_advance_apr: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="maxCashAdvanceApr")
    min_cash_advance_apr: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="minCashAdvanceApr")
    cash_advance_apr_text: Optional[StrictStr] = Field(default=None, alias="cashAdvanceAprText")
    max_cash_advance_intro_apr: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="maxCashAdvanceIntroApr")
    min_cash_advance_intro_apr: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="minCashAdvanceIntroApr")
    cash_advance_intro_apr_term: Optional[StrictInt] = Field(default=None, alias="cashAdvanceIntroAprTerm")
    cash_advance_intro_apr_term_unit: Optional[TermUnit] = Field(default=None, alias="cashAdvanceIntroAprTermUnit")
    cash_advance_intro_apr_text: Optional[StrictStr] = Field(default=None, alias="cashAdvanceIntroAprText")
    max_balance_transfer_apr: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="maxBalanceTransferApr")
    min_balance_transfer_apr: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="minBalanceTransferApr")
    balance_transfer_apr_text: Optional[StrictStr] = Field(default=None, alias="balanceTransferAprText")
    max_balance_transfer_intro_apr: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="maxBalanceTransferIntroApr")
    min_balance_transfer_intro_apr: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="minBalanceTransferIntroApr")
    balance_transfer_intro_apr_term: Optional[StrictInt] = Field(default=None, alias="balanceTransferIntroAprTerm")
    balance_transfer_intro_apr_term_unit: Optional[TermUnit] = Field(default=None, alias="balanceTransferIntroAprTermUnit")
    balance_transfer_intro_apr_text: Optional[StrictStr] = Field(default=None, alias="balanceTransferIntroAprText")
    max_annual_fee: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="maxAnnualFee")
    min_annual_fee: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="minAnnualFee")
    annual_intro_fee: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="annualIntroFee")
    annual_intro_fee_term: Optional[StrictInt] = Field(default=None, description="Number of _years_ the introductory anual fee is in effect", alias="annualIntroFeeTerm")
    intro_offer_amount: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="introOfferAmount")
    intro_offer_text: Optional[StrictStr] = Field(default=None, alias="introOfferText")
    intro_offer_type: Optional[IntroOfferType] = Field(default=None, alias="introOfferType")
    details: Optional[List[StrictStr]] = Field(default=None, description="List of card features which must be prominently displayed with the offer")
    additional_details: Optional[List[StrictStr]] = Field(default=None, description="List of card features which must be displayed with the offer", alias="additionalDetails")
    card_type: CardType = Field(alias="cardType")
    minimum_credit_line: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="minimumCreditLine")
    minimum_penalty_apr: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="minimumPenaltyApr")
    maximum_penalty_apr: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="maximumPenaltyApr")
    balance_transfer_fee: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="balanceTransferFee")
    cash_advance_fee: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="cashAdvanceFee")
    late_fee: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="lateFee")
    foreign_exchange_fee: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="foreignExchangeFee")
    account_opening_fee: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="accountOpeningFee")
    return_payment_fee: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="returnPaymentFee")
    monthly_service_fee: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="monthlyServiceFee")
    recommended_credit_ratings: Optional[List[ProvidedCreditRating]] = Field(default=None, alias="recommendedCreditRatings")
    pre_qualified: StrictBool = Field(alias="preQualified")
    pre_approved: StrictBool = Field(alias="preApproved")
    pre_selected: StrictBool = Field(description="Indicates that Engine by MoneyLion has determined that the user has an increased likelihood of being approved for this card.", alias="preSelected")
    foreign_transaction_fee: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Percentage represented in decimal format added to all foreign transactions", alias="foreignTransactionFee")
    card_benefits: Optional[List[CardBenefit]] = Field(default=None, alias="cardBenefits")
    __properties: ClassVar[List[str]] = ["cardName", "cardImageUrl", "cardPurposes", "ratesUrl", "maxPurchaseApr", "minPurchaseApr", "purchaseAprText", "maxPurchaseIntroApr", "minPurchaseIntroApr", "purchaseIntroAprTerm", "purchaseIntroAprTermUnit", "purchaseIntroAprText", "maxCashAdvanceApr", "minCashAdvanceApr", "cashAdvanceAprText", "maxCashAdvanceIntroApr", "minCashAdvanceIntroApr", "cashAdvanceIntroAprTerm", "cashAdvanceIntroAprTermUnit", "cashAdvanceIntroAprText", "maxBalanceTransferApr", "minBalanceTransferApr", "balanceTransferAprText", "maxBalanceTransferIntroApr", "minBalanceTransferIntroApr", "balanceTransferIntroAprTerm", "balanceTransferIntroAprTermUnit", "balanceTransferIntroAprText", "maxAnnualFee", "minAnnualFee", "annualIntroFee", "annualIntroFeeTerm", "introOfferAmount", "introOfferText", "introOfferType", "details", "additionalDetails", "cardType", "minimumCreditLine", "minimumPenaltyApr", "maximumPenaltyApr", "balanceTransferFee", "cashAdvanceFee", "lateFee", "foreignExchangeFee", "accountOpeningFee", "returnPaymentFee", "monthlyServiceFee", "recommendedCreditRatings", "preQualified", "preApproved", "preSelected", "foreignTransactionFee", "cardBenefits"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of CreditCardOfferDetails from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of CreditCardOfferDetails from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "cardName": obj.get("cardName"),
            "cardImageUrl": obj.get("cardImageUrl"),
            "cardPurposes": obj.get("cardPurposes"),
            "ratesUrl": obj.get("ratesUrl"),
            "maxPurchaseApr": obj.get("maxPurchaseApr"),
            "minPurchaseApr": obj.get("minPurchaseApr"),
            "purchaseAprText": obj.get("purchaseAprText"),
            "maxPurchaseIntroApr": obj.get("maxPurchaseIntroApr"),
            "minPurchaseIntroApr": obj.get("minPurchaseIntroApr"),
            "purchaseIntroAprTerm": obj.get("purchaseIntroAprTerm"),
            "purchaseIntroAprTermUnit": obj.get("purchaseIntroAprTermUnit"),
            "purchaseIntroAprText": obj.get("purchaseIntroAprText"),
            "maxCashAdvanceApr": obj.get("maxCashAdvanceApr"),
            "minCashAdvanceApr": obj.get("minCashAdvanceApr"),
            "cashAdvanceAprText": obj.get("cashAdvanceAprText"),
            "maxCashAdvanceIntroApr": obj.get("maxCashAdvanceIntroApr"),
            "minCashAdvanceIntroApr": obj.get("minCashAdvanceIntroApr"),
            "cashAdvanceIntroAprTerm": obj.get("cashAdvanceIntroAprTerm"),
            "cashAdvanceIntroAprTermUnit": obj.get("cashAdvanceIntroAprTermUnit"),
            "cashAdvanceIntroAprText": obj.get("cashAdvanceIntroAprText"),
            "maxBalanceTransferApr": obj.get("maxBalanceTransferApr"),
            "minBalanceTransferApr": obj.get("minBalanceTransferApr"),
            "balanceTransferAprText": obj.get("balanceTransferAprText"),
            "maxBalanceTransferIntroApr": obj.get("maxBalanceTransferIntroApr"),
            "minBalanceTransferIntroApr": obj.get("minBalanceTransferIntroApr"),
            "balanceTransferIntroAprTerm": obj.get("balanceTransferIntroAprTerm"),
            "balanceTransferIntroAprTermUnit": obj.get("balanceTransferIntroAprTermUnit"),
            "balanceTransferIntroAprText": obj.get("balanceTransferIntroAprText"),
            "maxAnnualFee": obj.get("maxAnnualFee"),
            "minAnnualFee": obj.get("minAnnualFee"),
            "annualIntroFee": obj.get("annualIntroFee"),
            "annualIntroFeeTerm": obj.get("annualIntroFeeTerm"),
            "introOfferAmount": obj.get("introOfferAmount"),
            "introOfferText": obj.get("introOfferText"),
            "introOfferType": obj.get("introOfferType"),
            "details": obj.get("details"),
            "additionalDetails": obj.get("additionalDetails"),
            "cardType": obj.get("cardType"),
            "minimumCreditLine": obj.get("minimumCreditLine"),
            "minimumPenaltyApr": obj.get("minimumPenaltyApr"),
            "maximumPenaltyApr": obj.get("maximumPenaltyApr"),
            "balanceTransferFee": obj.get("balanceTransferFee"),
            "cashAdvanceFee": obj.get("cashAdvanceFee"),
            "lateFee": obj.get("lateFee"),
            "foreignExchangeFee": obj.get("foreignExchangeFee"),
            "accountOpeningFee": obj.get("accountOpeningFee"),
            "returnPaymentFee": obj.get("returnPaymentFee"),
            "monthlyServiceFee": obj.get("monthlyServiceFee"),
            "recommendedCreditRatings": obj.get("recommendedCreditRatings"),
            "preQualified": obj.get("preQualified"),
            "preApproved": obj.get("preApproved"),
            "preSelected": obj.get("preSelected"),
            "foreignTransactionFee": obj.get("foreignTransactionFee"),
            "cardBenefits": obj.get("cardBenefits")
        })
        return _obj


