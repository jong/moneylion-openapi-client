# coding: utf-8

"""
    Engine by MoneyLion API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.58.0
    Contact: help@engine.tech
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.credit_card_offer import CreditCardOffer

class TestCreditCardOffer(unittest.TestCase):
    """CreditCardOffer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreditCardOffer:
        """Test CreditCardOffer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreditCardOffer`
        """
        model = CreditCardOffer()
        if include_optional:
            return CreditCardOffer(
                details = openapi_client.models.credit_card_offer_details.CreditCardOfferDetails(
                    card_name = '', 
                    card_image_url = '', 
                    card_purposes = [
                        'balance_transfer'
                        ], 
                    rates_url = '', 
                    max_purchase_apr = 1.337, 
                    min_purchase_apr = 1.337, 
                    purchase_apr_text = '', 
                    max_purchase_intro_apr = 1.337, 
                    min_purchase_intro_apr = 1.337, 
                    purchase_intro_apr_term = 56, 
                    purchase_intro_apr_term_unit = 'day', 
                    purchase_intro_apr_text = '', 
                    max_cash_advance_apr = 1.337, 
                    min_cash_advance_apr = 1.337, 
                    cash_advance_apr_text = '', 
                    max_cash_advance_intro_apr = 1.337, 
                    min_cash_advance_intro_apr = 1.337, 
                    cash_advance_intro_apr_term = 56, 
                    cash_advance_intro_apr_term_unit = 'day', 
                    cash_advance_intro_apr_text = '', 
                    max_balance_transfer_apr = 1.337, 
                    min_balance_transfer_apr = 1.337, 
                    balance_transfer_apr_text = '', 
                    max_balance_transfer_intro_apr = 1.337, 
                    min_balance_transfer_intro_apr = 1.337, 
                    balance_transfer_intro_apr_term = 56, 
                    balance_transfer_intro_apr_term_unit = 'day', 
                    balance_transfer_intro_apr_text = '', 
                    max_annual_fee = 1.337, 
                    min_annual_fee = 1.337, 
                    annual_intro_fee = 1.337, 
                    annual_intro_fee_term = 56, 
                    intro_offer_amount = 1.337, 
                    intro_offer_text = '', 
                    intro_offer_type = 'miles', 
                    details = [
                        ''
                        ], 
                    additional_details = [
                        ''
                        ], 
                    card_type = 'visa', 
                    minimum_credit_line = 1.337, 
                    minimum_penalty_apr = 1.337, 
                    maximum_penalty_apr = 1.337, 
                    balance_transfer_fee = 1.337, 
                    cash_advance_fee = 1.337, 
                    late_fee = 1.337, 
                    foreign_exchange_fee = 1.337, 
                    account_opening_fee = 1.337, 
                    return_payment_fee = 1.337, 
                    monthly_service_fee = 1.337, 
                    recommended_credit_ratings = [
                        'excellent'
                        ], 
                    pre_qualified = True, 
                    pre_approved = True, 
                    pre_selected = True, 
                    foreign_transaction_fee = 1.337, 
                    card_benefits = [
                        'No Foreign Transaction Fees'
                        ], ),
                uuid = '',
                partner = openapi_client.models.partner.Partner(
                    uuid = '', 
                    name = '', 
                    description = '', 
                    disclaimer = '', 
                    supports_pre_select = True, 
                    should_display_pre_select = True, 
                    supports_personalized_offers = True, 
                    image_url = '', 
                    subtext_override = '', ),
                marketplace = openapi_client.models.partner.Partner(
                    uuid = '', 
                    name = '', 
                    description = '', 
                    disclaimer = '', 
                    supports_pre_select = True, 
                    should_display_pre_select = True, 
                    supports_personalized_offers = True, 
                    image_url = '', 
                    subtext_override = '', ),
                product_type = 'credit_card',
                product_sub_type = 'credit_card',
                url = '',
                recommendation_score = 1.337,
                disclaimer = '',
                product_sub_type_disclaimer = '',
                expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return CreditCardOffer(
                details = openapi_client.models.credit_card_offer_details.CreditCardOfferDetails(
                    card_name = '', 
                    card_image_url = '', 
                    card_purposes = [
                        'balance_transfer'
                        ], 
                    rates_url = '', 
                    max_purchase_apr = 1.337, 
                    min_purchase_apr = 1.337, 
                    purchase_apr_text = '', 
                    max_purchase_intro_apr = 1.337, 
                    min_purchase_intro_apr = 1.337, 
                    purchase_intro_apr_term = 56, 
                    purchase_intro_apr_term_unit = 'day', 
                    purchase_intro_apr_text = '', 
                    max_cash_advance_apr = 1.337, 
                    min_cash_advance_apr = 1.337, 
                    cash_advance_apr_text = '', 
                    max_cash_advance_intro_apr = 1.337, 
                    min_cash_advance_intro_apr = 1.337, 
                    cash_advance_intro_apr_term = 56, 
                    cash_advance_intro_apr_term_unit = 'day', 
                    cash_advance_intro_apr_text = '', 
                    max_balance_transfer_apr = 1.337, 
                    min_balance_transfer_apr = 1.337, 
                    balance_transfer_apr_text = '', 
                    max_balance_transfer_intro_apr = 1.337, 
                    min_balance_transfer_intro_apr = 1.337, 
                    balance_transfer_intro_apr_term = 56, 
                    balance_transfer_intro_apr_term_unit = 'day', 
                    balance_transfer_intro_apr_text = '', 
                    max_annual_fee = 1.337, 
                    min_annual_fee = 1.337, 
                    annual_intro_fee = 1.337, 
                    annual_intro_fee_term = 56, 
                    intro_offer_amount = 1.337, 
                    intro_offer_text = '', 
                    intro_offer_type = 'miles', 
                    details = [
                        ''
                        ], 
                    additional_details = [
                        ''
                        ], 
                    card_type = 'visa', 
                    minimum_credit_line = 1.337, 
                    minimum_penalty_apr = 1.337, 
                    maximum_penalty_apr = 1.337, 
                    balance_transfer_fee = 1.337, 
                    cash_advance_fee = 1.337, 
                    late_fee = 1.337, 
                    foreign_exchange_fee = 1.337, 
                    account_opening_fee = 1.337, 
                    return_payment_fee = 1.337, 
                    monthly_service_fee = 1.337, 
                    recommended_credit_ratings = [
                        'excellent'
                        ], 
                    pre_qualified = True, 
                    pre_approved = True, 
                    pre_selected = True, 
                    foreign_transaction_fee = 1.337, 
                    card_benefits = [
                        'No Foreign Transaction Fees'
                        ], ),
                uuid = '',
                partner = openapi_client.models.partner.Partner(
                    uuid = '', 
                    name = '', 
                    description = '', 
                    disclaimer = '', 
                    supports_pre_select = True, 
                    should_display_pre_select = True, 
                    supports_personalized_offers = True, 
                    image_url = '', 
                    subtext_override = '', ),
                product_type = 'credit_card',
                product_sub_type = 'credit_card',
                url = '',
        )
        """

    def testCreditCardOffer(self):
        """Test CreditCardOffer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
