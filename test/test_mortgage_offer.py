# coding: utf-8

"""
    Engine by MoneyLion API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.58.0
    Contact: help@engine.tech
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.mortgage_offer import MortgageOffer

class TestMortgageOffer(unittest.TestCase):
    """MortgageOffer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MortgageOffer:
        """Test MortgageOffer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MortgageOffer`
        """
        model = MortgageOffer()
        if include_optional:
            return MortgageOffer(
                details = openapi_client.models.mortgage_offer_details.MortgageOfferDetails(
                    interest_rate = 1.337, 
                    loan_type = 'fifteen_year_fixed', 
                    price_adjustment = 1.337, 
                    monthly_payment = 1.337, 
                    net_closing_costs = 1.337, 
                    apr = 1.337, 
                    loan_term = 56, 
                    adjustment_type = 'credits', ),
                uuid = '',
                partner = openapi_client.models.partner.Partner(
                    uuid = '', 
                    name = '', 
                    description = '', 
                    disclaimer = '', 
                    supports_pre_select = True, 
                    should_display_pre_select = True, 
                    supports_personalized_offers = True, 
                    image_url = '', 
                    subtext_override = '', ),
                marketplace = openapi_client.models.partner.Partner(
                    uuid = '', 
                    name = '', 
                    description = '', 
                    disclaimer = '', 
                    supports_pre_select = True, 
                    should_display_pre_select = True, 
                    supports_personalized_offers = True, 
                    image_url = '', 
                    subtext_override = '', ),
                product_type = 'credit_card',
                product_sub_type = 'credit_card',
                url = '',
                recommendation_score = 1.337,
                disclaimer = '',
                product_sub_type_disclaimer = '',
                expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return MortgageOffer(
                details = openapi_client.models.mortgage_offer_details.MortgageOfferDetails(
                    interest_rate = 1.337, 
                    loan_type = 'fifteen_year_fixed', 
                    price_adjustment = 1.337, 
                    monthly_payment = 1.337, 
                    net_closing_costs = 1.337, 
                    apr = 1.337, 
                    loan_term = 56, 
                    adjustment_type = 'credits', ),
                uuid = '',
                partner = openapi_client.models.partner.Partner(
                    uuid = '', 
                    name = '', 
                    description = '', 
                    disclaimer = '', 
                    supports_pre_select = True, 
                    should_display_pre_select = True, 
                    supports_personalized_offers = True, 
                    image_url = '', 
                    subtext_override = '', ),
                product_type = 'credit_card',
                product_sub_type = 'credit_card',
                url = '',
        )
        """

    def testMortgageOffer(self):
        """Test MortgageOffer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
